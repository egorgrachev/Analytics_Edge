sd(c(5,8,12))
which.min(c(4,1,6))
Sys.setlocale("LC_ALL","C")
c(2,3,5,8,13)
Country = c("Brazil", "China")
c
Country
Country = c("Brazil", "China", "India", "Russia", "USA")
LifeExpectances = c(74,76,65,83,79)
Country[1]
Country[0]
seq(0,100,2)
CountryData = data.frame(Country, LifeExpectances)
CountryData
CountryData$Population=c(199000,1390000,1240000,7997,318000)
CountryData
Country = c("Australia", "Greece")
LifeExpectancy = c(82,81)
Population = c(23050, 11125)
NewCountryData = data.frame(Country, LifeExpectancy, Population)
NewCountryData
AllCountryData = rbind(CountryData, NewCountryData)
AllCountryData = rbind(CountryData, NewCountryData)
AllCountryData
CountryData
NewCountryData
AllCountryData = rbind(CountryData, NewCountryData)
AllCOuntryData
getwd()
cd AnalyticsEdge
cd(AnalyticsEdge)
> WHO = read.csv("WHO.csv")
WHO = read.csv("WHO.csv")
> WHO = read.csv("/egor/AnalyticsEdge/WHO.csv")
tapply(WHO$Over60, WHO$Region, mean)
WHO = read.csv("../egor/AnalyticsEdge/WHO.csv")
data = read.csv("AnalyticsEdge/Assigment3/gerber.csv")
summary(data)
str(data)
tapply(data$voting, data$voting == 1, sum)
108696 / 344084
table(data$voting)
table(data$hawthorne, data$voting)
table(data$hawthorne, data$voting)[2,2]
table(data$hawthorne, data$voting)[2,2] / tablbe(data$hawthorne)
table(data$hawthorne, data$voting)[2,2] / table(data$hawthorne)
table(data$hawthorne, data$voting)[2,2] / table(data$hawthorne)[2]
table(data$hawthorne)
table(data$civicduty, data$voting)[2,2] / table(data$civicduty)[2]
table(data$hawthorne, data$voting)[2,2] / table(data$hawthorne)[2]
table(data$civicduty, data$voting)[2,2] / table(data$civicduty)[2]
table(data$neighbors, data$voting)[2,2] / table(data$neighbors)[2]
table(data$self, data$voting)[2,2] / table(data$self)[2]
tapply(data$voting, data$hawthorne, mean)
summary(data)
model = glm(voting ~ hawthorne + civilduty + self + neighbors, data = data, family = 'binomial')
model = glm(voting ~ hawthorne + civicduty + self + neighbors, data = data, family = 'binomial')
summary(model)
predicted = predict(model, type = "response")
talbe(data$voting, predicted > 0.3)
table(data$voting, predicted > 0.3)
(51966+134513) / (134513 + 100875 + 56730 + 51966)
table(data$voting, predicted > 0.5)
table(data$voting, predicted > 0.5)
234388 / (235388 + 108696)
tapply(data$voting, data$voting == 1, sum)
108696 / 344084
234388 / (235388 + 108696)
(51966+134513) / (134513 + 100875 + 56730 + 51966)
library(ROCR)
as.numeric(performance(predicted, "auc")@y.values)
as.numeric(performance(ROCRpred, "auc")@y.values)
ROCRpred = prediction(data, data$voting)
ROCRpred = prediction(data, data$voting)
ROCRpred = prediction(predicted, data$voting)
as.numeric(performance(ROCRpred, "auc")@y.values)
as.numeric(performance(ROCRpred, "auc")@y.values)
CARTmodel = rpart(voting ~ hawthorne + civicduty + self + neighbors, data = data)
library(rpart)
CARTmodel = rpart(voting ~ hawthorne + civicduty + self + neighbors, data = data)
prp(CARTmodel)
library(rpart.plot)
prp(CARTmodel)
)
summary(CARTmodel)
CARTmodel = rpart(voting ~ hawthorne + civicduty + self + neighbors, data = data, cp = 0.0)
CARTmodel = rpart(voting ~ hawthorne + civicduty + self + neighbors, data = data)
CARTmodel2 = rpart(voting ~ hawthorne + civicduty + self + neighbors, data = data, cp = 0.0)
prp(CARTmodel2)
CARTmodel3 = rpart(voting ~ hawthorne + civicduty + self + neighbors + sex, data = data, cp = 0.0)
prp(CARTmodel3)
CARTcontrol = rpart(voting ~ control, data = data, cp = 0.0)
)
CARTcontrolsex = rpart(voting ~ control + sex, data = data, cp = 0.0)
prp(CARTcontrol)
summary(CARTcontrol)
abs(0.3400004 - 0.2966383)
prp(CARTcontrolsex)
summary(CARTcontrolsex)
LRcontrolsex = glm(voting ~ control + sex, data = data, family = 'binomial')
)
summary(LRcontrolsex)
Posibilities = data.frame(sex = c(0,0,1,1), control = c(0,1,0,1))
predict(LRcontrolsex, newdata = Posibilities, type = "response" )
prp(CARTcontrolsex, digits = 6)
abs(0.302785 - 0.2908065)
abs(0.302795 - 0.2908065)
LRmodel2 = glm(voting ~ conrol + sex + sex:control, data = data, family='binomial')
LRmodel2 = glm(voting ~ control + sex + sex:control, data = data, family='binomial')
summary(LRmodel2)
predict(LRmodel2, newdata=Posibilities, type="response")
abs(0.2904588 - 0.290456)
2.8e-06
2.8e-06*10
2.8e-06*100
data = read.csv("AnalyticsEdge/Assigment3/letters_ABPR.csv")
setwd("AnalyticsEdge/Assigment3/")
